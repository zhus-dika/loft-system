(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react);
    global.react156 = mod.exports;
  }
})(this, function (_exports, _react) {
  "use strict";

  _exports.__esModule = true;
  _exports["default"] = void 0;
  _react = _interopRequireWildcard(_react);

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

  function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var CUSTOM_PROPERTY_NAME = '--aspect-ratio';

  var AspectRatio =
  /*#__PURE__*/
  function (_Component) {
    _inheritsLoose(AspectRatio, _Component);

    function AspectRatio() {
      var _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _Component.call.apply(_Component, [this].concat(args)) || this;

      _defineProperty(_assertThisInitialized(_this), "node", null);

      _defineProperty(_assertThisInitialized(_this), "setNode", function (node) {
        _this.node = node;
      });

      return _this;
    }

    var _proto = AspectRatio.prototype;

    _proto.componentDidUpdate = function componentDidUpdate() {
      if (this.node) {
        var node = this.node; // BC for older version of React https://github.com/facebook/react/issues/6411
        // check if React support custom property AFTER

        var customPropertyValue = node.style.getPropertyValue(CUSTOM_PROPERTY_NAME);

        if (!customPropertyValue) {
          node.style.setProperty(CUSTOM_PROPERTY_NAME, "(" + this.props.ratio + ")");
        }
      }
    };

    _proto.render = function render() {
      var _extends2;

      var _this$props = this.props,
          ratio = _this$props.ratio,
          style = _this$props.style,
          children = _this$props.children,
          otherProps = _objectWithoutPropertiesLoose(_this$props, ["ratio", "style", "children"]); // eslint-disable-line no-unused-vars


      var newStyle = _extends({}, style, (_extends2 = {}, _extends2[CUSTOM_PROPERTY_NAME] = "(" + ratio + ")", _extends2));

      return _react["default"].createElement("div", _extends({
        ref: this.setNode,
        style: newStyle
      }, otherProps), children);
    };

    return AspectRatio;
  }(_react.Component);

  _defineProperty(AspectRatio, "defaultProps", {
    className: 'react-aspect-ratio-placeholder',
    ratio: 1
  });

  var _default = AspectRatio;
  _exports["default"] = _default;
});