(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["react", "react-test-renderer", "../index"], factory);
  } else if (typeof exports !== "undefined") {
    factory(require("react"), require("react-test-renderer"), require("../index"));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.react, global.reactTestRenderer, global.index);
    global.index = mod.exports;
  }
})(this, function (_react, _reactTestRenderer, _index) {
  "use strict";

  _react = _interopRequireDefault(_react);
  _reactTestRenderer = _interopRequireDefault(_reactTestRenderer);
  _index = _interopRequireWildcard(_index);

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

  // // eslint-disable-line import/no-named-as-default
  describe('Aspect Ratio', function () {
    describe('React < 15.6', function () {
      it('should render wrapper for children', function () {
        var innerImage = _react["default"].createElement("img", {
          src: "https://foo.bar",
          alt: "demo"
        });

        var node = _reactTestRenderer["default"].create(_react["default"].createElement(_index["default"], {
          ratio: "4/3"
        }, innerImage)).toJSON();

        expect(node).toMatchSnapshot();
      });
      it('should support number as props', function () {
        var innerImage = _react["default"].createElement("img", {
          src: "https://foo.bar",
          alt: "demo"
        });

        var node = _reactTestRenderer["default"].create(_react["default"].createElement(_index["default"], {
          ratio: 0.75
        }, innerImage)).toJSON();

        expect(node).toMatchSnapshot();
      });
      it('custom style willl be adpoted', function () {
        var innerImage = _react["default"].createElement("img", {
          src: "https://foo.bar",
          alt: "demo"
        });

        var node = _reactTestRenderer["default"].create(_react["default"].createElement(_index["default"], {
          ratio: "4/3",
          style: {
            color: '#fff'
          }
        }, innerImage)).toJSON();

        expect(node).toMatchSnapshot();
      });
    });
    describe('React > 15.6', function () {
      it('should render wrapper for children', function () {
        var innerImage = _react["default"].createElement("img", {
          src: "https://foo.bar",
          alt: "demo"
        });

        var node = _reactTestRenderer["default"].create(_react["default"].createElement(_index.AspectRatio, {
          ratio: "4/3"
        }, innerImage)).toJSON();

        expect(node).toMatchSnapshot();
      });
      it('should support number as props', function () {
        var innerImage = _react["default"].createElement("img", {
          src: "https://foo.bar",
          alt: "demo"
        });

        var node = _reactTestRenderer["default"].create(_react["default"].createElement(_index.AspectRatio, {
          ratio: 0.75
        }, innerImage)).toJSON();

        expect(node).toMatchSnapshot();
      });
      it('custom style willl be adpoted', function () {
        var innerImage = _react["default"].createElement("img", {
          src: "https://foo.bar",
          alt: "demo"
        });

        var node = _reactTestRenderer["default"].create(_react["default"].createElement(_index.AspectRatio, {
          ratio: "4/3",
          style: {
            color: '#fff'
          }
        }, innerImage)).toJSON();

        expect(node).toMatchSnapshot();
      });
    });
  });
});